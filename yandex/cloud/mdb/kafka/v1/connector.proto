syntax = "proto3";

package yandex.cloud.mdb.kafka.v1;

import "google/protobuf/wrappers.proto";

option go_package = "github.com/yandex-cloud/go-genproto/yandex/cloud/mdb/kafka/v1;kafka";
option java_package = "yandex.cloud.api.mdb.kafka.v1";

// An object that represents an Apache Kafka® connector.
//
// See [the documentation](/docs/managed-kafka/concepts/connectors) for details.
message ConnectorSpec {
  // Name of the connector.
  string name = 1;

  // Maximum number of connector tasks. Default value is the number of brokers.
  google.protobuf.Int64Value tasks_max = 2;

  // A set of properties passed to Managed Service for Apache Kafka® with the connector configuration.
  // Example: `sync.topics.config.enabled: true`.
  map<string, string> properties = 3;

  // Additional settings for the connector.
  oneof connector_config {

    // Configuration of the MirrorMaker connector.
    ConnectorConfigMirrorMakerSpec connector_config_mirrormaker = 10;
  }

}

message UpdateConnectorSpec {
  // Maximum number of connector tasks to update.
  google.protobuf.Int64Value tasks_max = 1;

  // A set of new or changed properties to update for the connector. They are passed with the connector configuration to Managed Service for Apache Kafka®.
  // Example: `sync.topics.config.enabled: false`.
  map<string, string> properties = 2;

  // Updated configuration for the connector.
  oneof connector_config {

    // Configuration of the MirrorMaker connector.
    ConnectorConfigMirrorMakerSpec connector_config_mirrormaker = 10;
  }
}

message ConnectorConfigMirrorMakerSpec {

  // Source cluster configuration for the MirrorMaker connector.
  ClusterConnectionSpec source_cluster = 1;

  // Target cluster configuration for the MirrorMaker connector.
  ClusterConnectionSpec target_cluster = 2;

  // List of Kafka topics, separated by `,`.
  string topics = 3;

  // Replication factor for automatically created topics.
  google.protobuf.Int64Value replication_factor = 4;
}

message ClusterConnectionSpec {

  // Alias of cluster connection configuration.
  // Examples: `source`, `target`.
  string alias = 1;

  // Type of connection to Apache Kafka® cluster.
  oneof cluster_connection {

    // Connection configuration of the cluster the connector belongs to. As all credentials are already known, leave this parameter empty.
    ThisClusterSpec this_cluster = 2;

    // Configuration of connection to an external cluster with all the necessary credentials.
    ExternalClusterConnectionSpec external_cluster = 3;
  }
}

message ThisClusterSpec {
}

message ExternalClusterConnectionSpec {
  // List of bootstrap servers of the cluster, separated by `,`.
  string bootstrap_servers = 1;

  // SASL username to use for connection to the cluster.
  string sasl_username = 2;

  // SASL password to use for connection to the cluster.
  string sasl_password = 3;

  // SASL mechanism to use for connection to the cluster.
  string sasl_mechanism = 4;

  // Security protocol to use for connection to the cluster.
  string security_protocol = 5;

  // CA in PEM format to connect to external cluster.
  // Lines of certificate separated by '\n' symbol.
  string ssl_truststore_certificates = 6;
}

message Connector {
  enum Health {

    // Health of the connector is unknown.
    HEALTH_UNKNOWN = 0;

    // Connector is running.
    ALIVE = 1;

    // Connector has failed to start.
    DEAD = 2;
  }

  enum Status {

    // Connector state is unknown.
    STATUS_UNKNOWN = 0;

    // Connector is running normally.
    RUNNING = 1;

    // Connector has encountered a problem and cannot operate.
    ERROR = 2;

    // Connector is paused.
    PAUSED = 3;
  }

  // Name of the connector.
  string name = 1;

  // Maximum number of connector tasks. Default value is the number of brokers.
  google.protobuf.Int64Value tasks_max = 2;

  // A set of properties passed to Managed Service for Apache Kafka® with the connector configuration.
  // Example: `sync.topics.config.enabled: true`.
  map<string, string> properties = 3;

  // Connector health.
  Health health = 4;

  // Current status of the connector.
  Status status = 5;

  // ID of the Apache Kafka® cluster that the connector belongs to.
  string cluster_id = 6;

  // Additional settings for the connector.
  oneof connector_config {

    // Configuration of the MirrorMaker connector.
    ConnectorConfigMirrorMaker connector_config_mirrormaker = 10;
  }
}

message ConnectorConfigMirrorMaker {
  // Source cluster connection configuration.
  ClusterConnection source_cluster = 1;

  // Target cluster connection configuration.
  ClusterConnection target_cluster = 2;

  // List of Kafka topics, separated by `,`.
  string topics = 3;

  // Replication factor for automatically created topics.
  google.protobuf.Int64Value replication_factor = 4;
}

message ClusterConnection {

  // Alias of cluster connection configuration.
  // Examples: `source`, `target`.
  string alias = 1;

  // Type of connection to Apache Kafka® cluster.
  oneof cluster_connection {

    // Connection configuration of the cluster the connector belongs to. As all credentials are already known, leave this parameter empty.
    ThisCluster this_cluster = 2;

    // Configuration of connection to an external cluster with all the necessary credentials.
    ExternalClusterConnection external_cluster = 3;
  }
}

message ThisCluster {
}

message ExternalClusterConnection {
  // List of bootstrap servers of the cluster, separated by `,`.
  string bootstrap_servers = 1;

  // SASL username to use for connection to the cluster.
  string sasl_username = 2;

  // SASL mechanism to use for connection to the cluster.
  string sasl_mechanism = 4;

  // Security protocol to use for connection to the cluster.
  string security_protocol = 5;
}

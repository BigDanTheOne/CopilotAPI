syntax = "proto3";

package yandex.cloud.mdb.mysql.v1alpha;

import "google/protobuf/timestamp.proto";
import "yandex/cloud/mdb/mysql/v1alpha/config/mysql5_7.proto";

option go_package = "github.com/yandex-cloud/go-genproto/yandex/cloud/mdb/mysql/v1alpha;mysql";

// MySQL cluster.
message Cluster {
  // Deployment environment.
  enum Environment {
    ENVIRONMENT_UNSPECIFIED = 0;

    // Stable environment with concervative update policy.
    PRODUCTION = 1;

    // Environment with more aggressive update policy in comparisson with
    // production environment.
    PRESTABLE = 2;
  }

  enum Health {
    HEALTH_UNKNOWN = 0; // Cluster is in unknown state (we have no data)
    ALIVE = 1; // Cluster is alive and well (all hosts are alive)
    DEAD = 2; // Cluster is inoperable (it cannot perform any of its essential functions)
    DEGRADED = 3; // Cluster is partially alive (it can perform some of its essential functions)
  }

  enum Status {
    STATUS_UNKNOWN = 0; // Cluster status is unknown
    CREATING = 1; // Cluster is being created
    RUNNING = 2; // Cluster is running
    ERROR = 3; // Cluster failed
    UPDATING = 4; // Cluster is being updated
    STOPPING = 5; // Cluster is stopping
    STOPPED = 6; // Cluster stopped
    STARTING = 7; // Cluster is starting
  }

  // Required. Unique ID of the MySQL cluster.
  // This ID is assigned by MDB in the process of creating a MySQL cluster.
  string id = 1;

  // ID of the folder that the MySQL cluster belongs to.
  string folder_id = 2;

  // The time when the MySQL cluster was created.
  google.protobuf.Timestamp created_at = 3;

  // Name of the MySQL cluster. The value is unique within the folder,
  // 1-63 characters long, and comply with RFC1035.
  string name = 4;

  // Description of the MySQL cluster. 0-256 characters long.
  string description = 5;

  map<string, string> labels = 6;

  // Deployment environment of the MySQL cluster.
  Environment environment = 7;

  // Monitoring systems relevant to the MySQL cluster.
  repeated Monitoring monitoring = 8;

  // Configuration of the MySQL cluster.
  ClusterConfig config = 9;

  string network_id = 10;

  // Aggregated cluster health
  Health health = 11;

  // Cluster status
  Status status = 12;
}

// Monitoring system.
message Monitoring {
  // Name of the monitoring system.
  string name = 1;

  // Description of the monitoring system.
  string description = 2;

  // Link to the monitoring system.
  string link = 3;
}

message ClusterConfig {
  // Version of MySQL DBMS.
  string version = 1;

  // Configuration settings of MySQL DBMS.
  oneof mysql_config {
    config.MysqlConfigSet5_7 mysql_config_5_7 = 2;
  }

  // Resources allocated to MySQL hosts.
  Resources resources = 3;
}

message Host {

  enum Role {
    ROLE_UNKNOWN = 0; // Role is unknown (we have no data)
    MASTER = 1;
    REPLICA = 2;
  }

  enum Health {
    HEALTH_UNKNOWN = 0; // Host is in unknown state (we have no data)
    ALIVE = 1; // Host is alive and well (all services are alive)
    DEAD = 2; // Host is inoperable (it cannot perform any of its essential functions)
    DEGRADED = 3; // Host is partially alive (it can perform some of its essential functions)
  }

  // Required. Name of the host.
  string name = 1;

  // Required. ID of the MySQL cluster.
  string cluster_id = 2;

  // ID of the availability zone.
  string zone_id = 3;

  // Resources allocated to the host.
  Resources resources = 4;

  // Host's role
  Role role = 5;

  // Aggregated host health
  Health health = 6;

  // Host services
  repeated Service services = 7;

  string subnet_id = 8;
}


message Service {

  enum Type {
    TYPE_UNSPECIFIED = 0;
    MYSQL_ERROR = 1; // MYSQL error log
    MYSQL_GENERAL = 2; // MYSQL general log
    MYSQL_SLOW_QUERY = 3; // MYSQL slow-query log
  }

  enum Health {
    HEALTH_UNKNOWN = 0; // Service is in unknown state (we have no data)
    ALIVE = 1; // Service is alive and well
    DEAD = 2; // service is dead or does not respond
  }

  // Type of service
  Type type = 1;

  // Service health
  Health health = 2;
}

message Resources {
  string resource_preset_id = 1;

  // Volume of the storage available to a host.
  int64 disk_size = 2;

  string disk_type_id = 3;
}

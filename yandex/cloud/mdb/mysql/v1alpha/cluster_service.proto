syntax = "proto3";

package yandex.cloud.mdb.mysql.v1alpha;

import "google/api/annotations.proto";
import "google/protobuf/field_mask.proto";
import "google/protobuf/timestamp.proto";
import "yandex/api/operation.proto";
import "yandex/cloud/operation/operation.proto";
import "yandex/cloud/validation.proto";
import "yandex/cloud/mdb/mysql/v1alpha/backup.proto";
import "yandex/cloud/mdb/mysql/v1alpha/cluster.proto";
import "yandex/cloud/mdb/mysql/v1alpha/database.proto";
import "yandex/cloud/mdb/mysql/v1alpha/user.proto";
import "yandex/cloud/mdb/mysql/v1alpha/config/mysql5_7.proto";

option go_package = "github.com/yandex-cloud/go-genproto/yandex/cloud/mdb/mysql/v1alpha;mysql";

// A set of methods for managing MySQL clusters.
service ClusterService {
  // Returns the specified MySQL cluster.
  rpc Get (GetClusterRequest) returns (Cluster) {
    option (google.api.http) = { get: "/managed-mysql/v1alpha/clusters/{cluster_id}" };
  }

  // Retrieves a list of MySQL clusters.
  rpc List (ListClustersRequest) returns (ListClustersResponse) {
    option (google.api.http) = { get: "/managed-mysql/v1alpha/clusters" };
  }

  // Creates a MySQL cluster.
  rpc Create (CreateClusterRequest) returns (operation.Operation) {
    option (google.api.http) = { post: "/managed-mysql/v1alpha/clusters" body: "*" };
    option (yandex.api.operation) = {
      metadata: "CreateClusterMetadata"
      response: "Cluster"
    };
  }

  // Modifies the specified MySQL cluster.
  rpc Update (UpdateClusterRequest) returns (operation.Operation) {
    option (google.api.http) = { patch: "/managed-mysql/v1alpha/clusters/{cluster_id}" body: "*" };
    option (yandex.api.operation) = {
      metadata: "UpdateClusterMetadata"
      response: "Cluster"
    };
  }

  // Deletes the specified MySQL cluster.
  rpc Delete (DeleteClusterRequest) returns (operation.Operation) {
    option (google.api.http) = { delete: "/managed-mysql/v1alpha/clusters/{cluster_id}" };
    option (yandex.api.operation) = {
      metadata: "DeleteClusterMetadata"
      response: "google.protobuf.Empty"
    };
  }

  // Start the specified MySQL cluster.
  rpc Start (StartClusterRequest) returns (operation.Operation) {
    option (google.api.http) = { post: "/managed-mysql/v1alpha/clusters/{cluster_id}:start" };
    option (yandex.api.operation) = {
      metadata: "StartClusterMetadata"
      response: "Cluster"
    };
  }

  // Stop the specified MySQL cluster.
  rpc Stop (StopClusterRequest) returns (operation.Operation) {
    option (google.api.http) = { post: "/managed-mysql/v1alpha/clusters/{cluster_id}:stop" };
    option (yandex.api.operation) = {
      metadata: "StopClusterMetadata"
      response: "Cluster"
    };
  }

  // Create a backup for the specified MySQL cluster.
  rpc Backup (BackupClusterRequest) returns (operation.Operation) {
    option (google.api.http) = { post: "/managed-mysql/v1alpha/clusters/{cluster_id}:backup" };
    option (yandex.api.operation) = {
      metadata: "BackupClusterMetadata"
      response: "Cluster"
    };
  }

  // Creates a new MySQL cluster from the specified backup.
  rpc Restore (RestoreClusterRequest) returns (operation.Operation) {
    option (google.api.http) = { post: "/managed-mysql/v1alpha/clusters:restore" body: "*" };
    option (yandex.api.operation) = {
      metadata: "RestoreClusterMetadata"
      response: "Cluster"
    };
  }

  // Returns logs for the specified MySQL cluster.
  // See the [Logs](/yandex-mdb-guide/concepts/logs.html) section in the developers guide for detailed logs description.
  rpc ListLogs (ListClusterLogsRequest) returns (ListClusterLogsResponse) {
    option (google.api.http) = { get: "/managed-mysql/v1alpha/clusters/{cluster_id}:logs" };
  }

  rpc ListOperations (ListClusterOperationsRequest) returns (ListClusterOperationsResponse) {
    option (google.api.http) = { get: "/managed-mysql/v1alpha/clusters/{cluster_id}/operations" };
  }

  // Returns the list of available backups for the specified MySQL cluster.
  rpc ListBackups (ListClusterBackupsRequest) returns (ListClusterBackupsResponse) {
    option (google.api.http) = { get: "/managed-mysql/v1alpha/clusters/{cluster_id}/backups" };
  }

  // Retrieves a list of hosts.
  rpc ListHosts (ListClusterHostsRequest) returns (ListClusterHostsResponse) {
    option (google.api.http) = { get: "/managed-mysql/v1alpha/clusters/{cluster_id}/hosts" };
  }

  // Creates a new hosts.
  rpc AddHosts (AddClusterHostsRequest) returns (operation.Operation) {
    option (google.api.http) = { post: "/managed-mysql/v1alpha/clusters/{cluster_id}/hosts:batchCreate" body: "*" };
    option (yandex.api.operation) = {
      metadata: "AddClusterHostsMetadata"
      response: "google.protobuf.Empty"
    };
  }

  // Deletes the specified host.
  rpc DeleteHosts (DeleteClusterHostsRequest) returns (operation.Operation) {
    option (google.api.http) = { post: "/managed-mysql/v1alpha/clusters/{cluster_id}/hosts:batchDelete" body: "*" };
    option (yandex.api.operation) = {
      metadata: "DeleteClusterHostsMetadata"
      response: "google.protobuf.Empty"
    };
  }
}


message GetClusterRequest {
  // Required. ID of the MySQL cluster to return.
  string cluster_id = 1 [(required) = true, (length) = "<=50"];
}

message ListClustersRequest {
  // Required. ID of the folder to list MySQL clusters in.
  string folder_id = 1 [(required) = true, (length) = "<=50"];

  // The maximum number of results per page that should be returned. If the number of available
  // results is larger than `page_size`, the service returns a `next_page_token` that can be used
  // to get the next page of results in subsequent ListClusters requests.
  // Acceptable values are 0 to 1000, inclusive. Default value: 100.
  int64 page_size = 2 [(value) = "0-1000"];

  // Page token. Set `page_token` to the `next_page_token` returned by a previous ListClusters
  // request to get the next page of results.
  string page_token = 3 [(length) = "<=100"];

  // String that describes a display filter.
  string filter = 4 [(length) = "<=1000"];
}

message ListClustersResponse {
  // Requested list of MySQL clusters.
  repeated Cluster clusters = 1;

  // This token allows you to get the next page of results for ListClusters requests,
  // if the number of results is larger than `page_size` specified in the request.
  // To get the next page, specify the value of `next_page_token` as a value for
  // the `page_token` parameter in the next ListClusters request. Subsequent ListClusters
  // requests will have their own `next_page_token` to continue paging through the results.
  string next_page_token = 2;
}

message CreateClusterRequest {
  // Required. ID of the folder to create MySQL cluster in.
  string folder_id = 1 [(required) = true, (length) = "<=50"];

  // Required. Name of the MySQL cluster. The value must be unique within the folder,
  // 1-63 characters long, and match the regular expression `^[a-zA-Z0-9_-]+$`.
  string name = 2 [(required) = true, (length) = "<=63", (pattern) = "[a-zA-Z0-9_-]*"];

  // Description of the MySQL cluster. 0-256 characters long.
  string description = 3 [(length) = "<=256"];

  map<string, string> labels = 4 [(yandex.cloud.size) = "<=64", (length) = "<=63", (pattern) = "[-_0-9a-z]*", (map_key).length = "1-63", (map_key).pattern = "[a-z][-_0-9a-z]*"];

  // Required. Deployment environment.
  Cluster.Environment environment = 5;

  // Required.
  ConfigSpec config_spec = 6;

  // Required.
  repeated DatabaseSpec database_specs = 7;

  // Required.
  repeated UserSpec user_specs = 8;

  repeated HostSpec host_specs = 9;

  string network_id = 10 [(length) = "<=50"];
}

message CreateClusterMetadata {
  // Required. ID of the creating MySQL cluster.
  string cluster_id = 1;
}

message UpdateClusterRequest {
  // Required. ID of the MySQL cluster to modify.
  string cluster_id = 1 [(required) = true, (length) = "<=50"];

  google.protobuf.FieldMask update_mask = 2;

  // Description of the MySQL cluster. 0-256 characters long.
  string description = 3 [(length) = "<=256"];

  map<string, string> labels = 4 [(yandex.cloud.size) = "<=64", (length) = "<=63", (pattern) = "[-_0-9a-z]*", (map_key).length = "1-63", (map_key).pattern = "[a-z][-_0-9a-z]*"];

  ConfigSpec config_spec = 5;

  string name = 6 [(length) = "<=63", (pattern) = "[a-zA-Z0-9_-]*"];
}

message UpdateClusterMetadata {
  // Required. ID of the MySQL cluster.
  string cluster_id = 1;
}

message DeleteClusterRequest {
  // Required. ID of the MySQL cluster to delete.
  string cluster_id = 1 [(required) = true, (length) = "<=50"];
}

message DeleteClusterMetadata {
  // Required. ID of the deleting MySQL cluster.
  string cluster_id = 1;
}

message BackupClusterRequest {
  // Required. ID of the MySQL cluster to back up.
  string cluster_id = 1 [(required) = true, (length) = "<=50"];
}

message BackupClusterMetadata {
  // Required. ID of the MySQL cluster.
  string cluster_id = 1;
}

message RestoreClusterRequest {
  // Required. ID of the backup to restore from.
  string backup_id = 1 [(required) = true];

  // Required. Timestamp of the moment the MySQL cluster should be restored.
  google.protobuf.Timestamp time = 2 [(required) = true];

  // Required. Name of the new MySQL cluster. The name must be unique within the folder.
  // The name canâ€™t be changed after the MySQL cluster is created.
  string name = 4 [(required) = true, (pattern) = "[a-zA-Z0-9_-]*"];

  // Description of the new MySQL cluster. 0-256 characters long.
  string description = 5 [(length) = "<=256"];

  map<string, string> labels = 6 [(yandex.cloud.size) = "<=64", (length) = "<=63", (pattern) = "[-_0-9a-z]*", (map_key).length = "1-63", (map_key).pattern = "[a-z][-_0-9a-z]*"];

  // Deployment environment of the new MySQL cluster.
  Cluster.Environment environment = 7;

  ConfigSpec config_spec = 8;

  repeated HostSpec host_specs = 9;

  string network_id = 10 [(length) = "<=50"];
}

message RestoreClusterMetadata {
  // Required. ID of the new MySQL cluster.
  string cluster_id = 1;

  // Required. ID of the backup used for recovery.
  string backup_id = 2;
}

message LogRecord {
  google.protobuf.Timestamp timestamp = 1;

  map<string, string> message = 2;
}

message ListClusterLogsRequest {
  // Required. ID of the MySQL cluster.
  string cluster_id = 1 [(required) = true, (length) = "<=50"];

  // Columns from logs table to get in the response.
  repeated string column_filter = 2;

  ServiceType service_type = 3;

  enum ServiceType {
    SERVICE_TYPE_UNSPECIFIED = 0;
    MYSQL = 1;
  }

  // Start timestamp for the logs request.
  google.protobuf.Timestamp from_time = 4;

  // End timestamp for the logs request.
  google.protobuf.Timestamp to_time = 5;

  // The maximum number of results per page that should be returned. If the number of available
  // results is larger than `page_size`, the service returns a `next_page_token` that can be used
  // to get the next page of results in subsequent ListLogs requests.
  // Acceptable values are 0 to 1000, inclusive. Default value: 100.
  int64 page_size = 6 [(value) = "0-1000"];

  // Page token. Set `page_token` to the `next_page_token` returned by a previous ListLogs
  // request to get the next page of results.
  string page_token = 7 [(length) = "<=100"];

  // Always return `next_page_token`, even if current page is empty.
  bool always_next_page_token = 8;
}

message ListClusterLogsResponse {
  // Requested log records.
  repeated LogRecord logs = 1;

  // This token allows you to get the next page of results for ListLogs requests,
  // if the number of results is larger than `page_size` specified in the request.
  // To get the next page, specify the value of `next_page_token` as a value for
  // the `page_token` parameter in the next ListLogs request. Subsequent ListLogs
  // requests will have their own `next_page_token` to continue paging through the results.
  string next_page_token = 2;
}

message ListClusterOperationsRequest {
  // Required. ID of the MySQL cluster.
  string cluster_id = 1 [(required) = true, (length) = "<=50"];

  // The maximum number of results per page that should be returned. If the number of available
  // results is larger than `page_size`, the service returns a `next_page_token` that can be used
  // to get the next page of results in subsequent ListOperations requests.
  // Acceptable values are 0 to 1000, inclusive. Default value: 100.
  int64 page_size = 2 [(value) = "0-1000"];

  // Page token. Set `page_token` to the `next_page_token` returned by a previous ListOperations
  // request to get the next page of results.
  string page_token = 3 [(length) = "<=100"];
}

message ListClusterOperationsResponse {
  repeated operation.Operation operations = 1;

  // This token allows you to get the next page of results for ListOperations requests,
  // if the number of results is larger than `page_size` specified in the request.
  // To get the next page, specify the value of `next_page_token` as a value for
  // the `page_token` parameter in the next ListOperations request. Subsequent ListOperations
  // requests will have their own `next_page_token` to continue paging through the results.
  string next_page_token = 2;
}

message ListClusterBackupsRequest {
  // Required. ID of the MySQL cluster.
  string cluster_id = 1 [(required) = true, (length) = "<=50"];

  // The maximum number of results per page that should be returned. If the number of available
  // results is larger than `page_size`, the service returns a `next_page_token` that can be used
  // to get the next page of results in subsequent ListClusterBackups requests.
  // Acceptable values are 0 to 1000, inclusive. Default value: 100.
  int64 page_size = 2 [(value) = "<=1000"];

  // Page token. Set `page_token` to the `next_page_token` returned by a previous ListClusterBackups
  // request to get the next page of results.
  string page_token = 3 [(length) = "<=100"];
}

message ListClusterBackupsResponse {
  // Requested list of backups.
  repeated Backup backups = 1;

  // This token allows you to get the next page of results for ListClusterBackups requests,
  // if the number of results is larger than `page_size` specified in the request.
  // To get the next page, specify the value of `next_page_token` as a value for
  // the `page_token` parameter in the next ListClusterBackups request. Subsequent ListClusterBackups
  // requests will have their own `next_page_token` to continue paging through the results.
  string next_page_token = 2;
}

message ListClusterHostsRequest {
  // Required. ID of the MySQL cluster.
  string cluster_id = 1 [(required) = true, (length) = "<=50"];

  // The maximum number of results per page that should be returned. If the number of available
  // results is larger than `page_size`, the service returns a `next_page_token` that can be used
  // to get the next page of results in subsequent ListClusterHosts requests.
  // Acceptable values are 0 to 1000, inclusive. Default value: 100.
  int64 page_size = 2 [(value) = "0-1000"];

  // Page token. Set `page_token` to the `next_page_token` returned by a previous ListClusterHosts
  // request to get the next page of results.
  string page_token = 3 [(length) = "<=100"];
}

message ListClusterHostsResponse {
  // Requested list of hosts.
  repeated Host hosts = 1;

  // This token allows you to get the next page of results for ListClusterHosts requests,
  // if the number of results is larger than `page_size` specified in the request.
  // To get the next page, specify the value of `next_page_token` as a value for
  // the `page_token` parameter in the next ListClusterHosts request. Subsequent ListClusterHosts
  // requests will have their own `next_page_token` to continue paging through the results.
  string next_page_token = 2;
}

message AddClusterHostsRequest {
  // Required. ID of the MySQL cluster.
  string cluster_id = 1 [(required) = true, (length) = "<=50"];

  // Required.
  repeated HostSpec host_specs = 2 [(size) = ">0"];
}

message AddClusterHostsMetadata {
  // Required. ID of the MySQL cluster.
  string cluster_id = 1;

  // Required. The name of adding host.
  repeated string host_names = 2;
}

message DeleteClusterHostsRequest {
  // Required. ID of the MySQL cluster.
  string cluster_id = 1 [(required) = true, (length) = "<=50"];

  // Required. Name of the host to delete.
  repeated string host_names = 2 [(size) = ">0", (length) = "<=253"];
}

message DeleteClusterHostsMetadata {
  // Required. ID of the MySQL cluster.
  string cluster_id = 1;

  // Required. The name of deleting host.
  repeated string host_names = 2;
}

message StartClusterRequest {
  // Required. ID of the MySQL cluster to start.
  string cluster_id = 1 [(required) = true, (length) = "<=50"];
}

message StartClusterMetadata {
  // Required. ID of the MySQL cluster.
  string cluster_id = 1;
}

message StopClusterRequest {
  // Required. ID of the MySQL cluster to stop.
  string cluster_id = 1 [(required) = true, (length) = "<=50"];
}

message StopClusterMetadata {
  // Required. ID of the MySQL cluster.
  string cluster_id = 1;
}

message UpdateClusterHostsMetadata {
  // Required. ID of the MySQL cluster.
  string cluster_id = 1;

  // Required. The name of updating host.
  repeated string host_names = 2;
}

message HostSpec {
  // ID of the availability zone.
  string zone_id = 1 [(length) = "<=50"];

  string subnet_id = 2 [(length) = "<=50"];

  bool assign_public_ip = 3;
}

message ConfigSpec {
  // Vetsion of MySQL RDBMS.
  string version = 1; // No formal validation, a list of supported versions should suffice.

  // Configuration settings of MySQL DBMS.
  oneof mysql_config {
    config.MysqlConfig5_7 mysql_config_5_7 = 2;
  }

  // Resources allocated to MySQL hosts.
  Resources resources = 3;
}

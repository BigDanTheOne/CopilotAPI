syntax = "proto3";

package yandex.cloud.apploadbalancer.v1;

import "google/api/annotations.proto";
import "google/protobuf/field_mask.proto";

import "yandex/cloud/api/operation.proto";
import "yandex/cloud/operation/operation.proto";
import "yandex/cloud/apploadbalancer/v1/backend_group.proto";
import "yandex/cloud/validation.proto";

option go_package = "github.com/yandex-cloud/go-genproto/yandex/cloud/apploadbalancer/v1;apploadbalancer";
option java_package = "yandex.cloud.api.apploadbalancer.v1";

service BackendGroupService {
  rpc Get(GetBackendGroupRequest) returns (BackendGroup) {
    option (google.api.http) = { get: "/apploadbalancer/v1/backendGroups/{backend_group_id}" };
  }
  rpc List(ListBackendGroupsRequest) returns (ListBackendGroupsResponse) {
    option (google.api.http) = { get: "/apploadbalancer/v1/backendGroups" };
  }

  rpc Create(CreateBackendGroupRequest) returns (operation.Operation) {
    option (google.api.http) = { post: "/apploadbalancer/v1/backendGroups" body: "*" };
    option (yandex.cloud.api.operation) = {
      metadata: "CreateBackendGroupMetadata"
      response: "BackendGroup"
    };
  }
  rpc Update(UpdateBackendGroupRequest) returns (operation.Operation) {
    option (google.api.http) = { patch: "/apploadbalancer/v1/backendGroups/{backend_group_id}" body: "*" };
    option (yandex.cloud.api.operation) = {
      metadata: "UpdateBackendGroupMetadata"
      response: "BackendGroup"
    };
  }
  rpc Delete(DeleteBackendGroupRequest) returns (operation.Operation) {
    option (google.api.http) = { delete: "/apploadbalancer/v1/backendGroups/{backend_group_id}" };
    option (yandex.cloud.api.operation) = {
      metadata: "DeleteBackendGroupMetadata"
      response: "google.protobuf.Empty"
    };
  }

  // AddBackend/RemoveBackend technically do the same, but have different semantics.
  rpc AddBackend(AddBackendRequest) returns (operation.Operation) {
    option (google.api.http) = { post: "/apploadbalancer/v1/backendGroups/{backend_group_id}:addBackend" body: "*" };
    option (yandex.cloud.api.operation) = {
      metadata: "AddBackendMetadata"
      response: "BackendGroup"
    };
  }
  rpc RemoveBackend(RemoveBackendRequest) returns (operation.Operation) {
    option (google.api.http) = { post: "/apploadbalancer/v1/backendGroups/{backend_group_id}:removeBackend" body: "*" };
    option (yandex.cloud.api.operation) = {
      metadata: "RemoveBackendMetadata"
      response: "BackendGroup"
    };
  }
  rpc UpdateBackend(UpdateBackendRequest) returns (operation.Operation) {
    option (google.api.http) = { post: "/apploadbalancer/v1/backendGroups/{backend_group_id}:updateBackend" body: "*" };
    option (yandex.cloud.api.operation) = {
      metadata: "UpdateBackendMetadata"
      response: "BackendGroup"
    };
  }

  // Lists operations for the specified backend group.
  rpc ListOperations (ListBackendGroupOperationsRequest) returns (ListBackendGroupOperationsResponse) {
    option (google.api.http) = { get: "/apploadbalancer/v1/backendGroups/{backend_group_id}/operations" };
  }
}

message GetBackendGroupRequest {
  string backend_group_id = 1 [(required) = true];
}

message ListBackendGroupsRequest {
  string folder_id = 1 [(required) = true];

  int64 page_size = 2 [(value) = "0-1000"];
  string page_token = 3 [(length) = "<=100"];
  string filter = 4 [(length) = "<=1000"];
}

message ListBackendGroupsResponse {
  repeated BackendGroup backend_groups = 1;
  string next_page_token = 2;
}

message DeleteBackendGroupRequest {
  string backend_group_id = 1 [(required) = true];
}

message DeleteBackendGroupMetadata {
  string backend_group_id = 1;
}

message UpdateBackendGroupRequest {
  string backend_group_id = 1 [(required) = true];
  google.protobuf.FieldMask update_mask = 2;

  string name = 3 [(pattern) = "|[a-z]([-a-z0-9]{0,61}[a-z0-9])?"];
  string description = 4 [(length) = "<=256"];
  map<string, string> labels = 5 [(yandex.cloud.size) = "<=64", (length) = "<=63", (pattern) = "[-_./\\@0-9a-z]*", (map_key).length = "1-63", (map_key).pattern = "[a-z][-_./\\@0-9a-z]*"];

  oneof backend {
    option (exactly_one) = true;
    HttpBackendGroup http = 6;
    GrpcBackendGroup grpc = 7;
  }
}

message UpdateBackendGroupMetadata {
  string backend_group_id = 1;
}

message CreateBackendGroupRequest {
  string folder_id = 1 [(required) = true];
  string name = 2 [(pattern) = "|[a-z]([-a-z0-9]{0,61}[a-z0-9])?"];
  string description = 3 [(length) = "<=256"];
  map<string, string> labels = 4 [(yandex.cloud.size) = "<=64", (length) = "<=63", (pattern) = "[-_./\\@0-9a-z]*", (map_key).length = "1-63", (map_key).pattern = "[a-z][-_./\\@0-9a-z]*"];

  oneof backend {
    HttpBackendGroup http = 5;
    GrpcBackendGroup grpc = 6;
  }
}

message CreateBackendGroupMetadata {
  string backend_group_id = 1;
}

message AddBackendRequest {
  string backend_group_id = 1 [(required) = true];

  oneof backend {
    option (exactly_one) = true;
    HttpBackend http = 2;
    GrpcBackend grpc = 3;
  }
}

message AddBackendMetadata {
  string backend_group_id = 1;
  string backend_name = 2;
}

message UpdateBackendRequest {
  string backend_group_id = 1 [(required) = true];
  google.protobuf.FieldMask update_mask = 2;

  oneof backend {
    option (exactly_one) = true;
    HttpBackend http = 3;
    GrpcBackend grpc = 4;
  }
}

message UpdateBackendMetadata {
  string backend_group_id = 1;
  string backend_name = 2;
}

message RemoveBackendRequest {
  string backend_group_id = 1 [(required) = true];
  string backend_name = 2 [(required) = true];
}

message RemoveBackendMetadata {
  string backend_group_id = 1;
  string backend_name = 2;
}

message ListBackendGroupOperationsRequest {
  // ID of the backend group to get operations for.
  //
  // To get the backend group ID, use a [BackendGroupService.List] request.
  string backend_group_id = 1 [(required) = true, (length) = "<=50"];

  // The maximum number of results per page that should be returned. If the number of available
  // results is larger than [page_size], the service returns a [ListBackendGroupOperationsResponse.next_page_token]
  // that can be used to get the next page of results in subsequent list requests.
  // Default value: 100.
  int64 page_size = 2 [(value) = "<=1000"];

  // Page token. To get the next page of results, set [page_token] to the
  // [ListBackendGroupOperationsResponse.next_page_token] returned by a previous list request.
  string page_token = 3 [(length) = "<=100"];
}

message ListBackendGroupOperationsResponse {
  // List of operations for the specified target group.
  repeated operation.Operation operations = 1;

  // This token allows you to get the next page of results for list requests. If the number of results
  // is larger than [ListBackendGroupOperationsRequest.page_size], use the [next_page_token] as the value
  // for the [ListBackendGroupOperationsRequest.page_token] query parameter in the next list request.
  // Each subsequent list request will have its own [next_page_token] to continue paging through the results.
  string next_page_token = 2;
}

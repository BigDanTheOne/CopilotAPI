syntax = "proto3";

package yandex.cloud.apploadbalancer.v1;

import "google/api/annotations.proto";
import "google/protobuf/field_mask.proto";

import "yandex/cloud/api/operation.proto";
import "yandex/cloud/operation/operation.proto";
import "yandex/cloud/apploadbalancer/v1/load_balancer.proto";
import "yandex/cloud/validation.proto";

option go_package = "github.com/yandex-cloud/go-genproto/yandex/cloud/apploadbalancer/v1;apploadbalancer";
option java_package = "yandex.cloud.api.apploadbalancer.v1";

service LoadBalancerService {
  rpc Get(GetLoadBalancerRequest) returns (LoadBalancer) {
    option (google.api.http) = { get: "/apploadbalancer/v1/loadBalancers/{load_balancer_id}" };
  }
  rpc List(ListLoadBalancersRequest) returns (ListLoadBalancersResponse) {
    option (google.api.http) = { get: "/apploadbalancer/v1/loadBalancers" };
  }

  rpc Create(CreateLoadBalancerRequest) returns (operation.Operation) {
    option (google.api.http) = { post: "/apploadbalancer/v1/loadBalancers" body: "*" };
    option (yandex.cloud.api.operation) = {
      metadata: "CreateLoadBalancerMetadata"
      response: "LoadBalancer"
    };
  }
  rpc Update(UpdateLoadBalancerRequest) returns (operation.Operation) {
    option (google.api.http) = { patch: "/apploadbalancer/v1/loadBalancers/{load_balancer_id}" body: "*" };
    option (yandex.cloud.api.operation) = {
      metadata: "UpdateLoadBalancerMetadata"
      response: "LoadBalancer"
    };
  }
  rpc Delete(DeleteLoadBalancerRequest) returns (operation.Operation) {
    option (google.api.http) = { delete: "/apploadbalancer/v1/loadBalancers/{load_balancer_id}" };
    option (yandex.cloud.api.operation) = {
      metadata: "DeleteLoadBalancerMetadata"
      response: "google.protobuf.Empty"
    };
  }
  rpc Start(StartLoadBalancerRequest) returns (operation.Operation) {
    option (google.api.http) = { post: "/apploadbalancer/v1/loadBalancers/{load_balancer_id}:start" };
    option (yandex.cloud.api.operation) = {
      metadata: "StartLoadBalancerMetadata"
      response: "LoadBalancer"
    };
  }
  rpc Stop(StopLoadBalancerRequest) returns (operation.Operation) {
    option (google.api.http) = { post: "/apploadbalancer/v1/loadBalancers/{load_balancer_id}:stop" };
    option (yandex.cloud.api.operation) = {
      metadata: "StopLoadBalancerMetadata"
      response: "LoadBalancer"
    };
  }

  // AddListener/UpdateListener technically do the same, but have different semantics.
  rpc AddListener(AddListenerRequest) returns (operation.Operation) {
    option (google.api.http) = { post: "/apploadbalancer/v1/loadBalancers/{load_balancer_id}:addListener" body: "*" };
    option (yandex.cloud.api.operation) = {
      metadata: "AddListenerMetadata"
      response: "LoadBalancer"
    };
  }
  rpc RemoveListener(RemoveListenerRequest) returns (operation.Operation) {
    option (google.api.http) = { post: "/apploadbalancer/v1/loadBalancers/{load_balancer_id}:removeListener" body: "*" };
    option (yandex.cloud.api.operation) = {
      metadata: "RemoveListenerMetadata"
      response: "LoadBalancer"
    };
  }
  rpc UpdateListener(UpdateListenerRequest) returns (operation.Operation) {
    option (google.api.http) = { post: "/apploadbalancer/v1/loadBalancers/{load_balancer_id}:updateListener" body: "*" };
    option (yandex.cloud.api.operation) = {
      metadata: "UpdateListenerMetadata"
      response: "LoadBalancer"
    };
  }
  rpc AddSniMatch(AddSniMatchRequest) returns (operation.Operation) {
    option (google.api.http) = { post: "/apploadbalancer/v1/loadBalancers/{load_balancer_id}:addSniMatch" body: "*" };
    option (yandex.cloud.api.operation) = {
      metadata: "AddSniMatchMetadata"
      response: "google.protobuf.Empty"
    };
  }

  rpc UpdateSniMatch(UpdateSniMatchRequest) returns (operation.Operation) {
    option (google.api.http) = { post: "/apploadbalancer/v1/loadBalancers/{load_balancer_id}:updateSniMatch" body: "*" };
    option (yandex.cloud.api.operation) = {
      metadata: "UpdateSniMatchMetadata"
      response: "google.protobuf.Empty"
    };
  }

  rpc RemoveSniMatch(RemoveSniMatchRequest) returns (operation.Operation) {
    option (google.api.http) = { post: "/apploadbalancer/v1/loadBalancers/{load_balancer_id}:removeSniMatch" body: "*" };
    option (yandex.cloud.api.operation) = {
      metadata: "RemoveSniMatchMetadata"
      response: "google.protobuf.Empty"
    };
  }
  // Returns zonal state of each target within target group
  // for a given backend group and load balancer.
  rpc GetTargetStates (GetTargetStatesRequest) returns (GetTargetStatesResponse) {
    option (google.api.http) = { get: "/apploadbalancer/v1/loadBalancers/{load_balancer_id}/targetStates/{backend_group_id}/{target_group_id}" };
  }

  // Lists operations for the specified load balancer.
  rpc ListOperations (ListLoadBalancerOperationsRequest) returns (ListLoadBalancerOperationsResponse) {
    option (google.api.http) = { get: "/apploadbalancer/v1/loadBalancers/{load_balancer_id}/operations" };
  }
}

message GetLoadBalancerRequest {
  string load_balancer_id = 1 [(required) = true];
}

message ListLoadBalancersRequest {
  string folder_id = 1 [(required) = true];

  int64 page_size = 2 [(value) = "0-1000"];
  string page_token = 3 [(length) = "<=100"];
  string filter = 4 [(length) = "<=1000"];
}

message ListLoadBalancersResponse {
  repeated LoadBalancer load_balancers = 1;
  string next_page_token = 2;
}

message DeleteLoadBalancerRequest {
  string load_balancer_id = 1 [(required) = true];
}

message DeleteLoadBalancerMetadata {
  string load_balancer_id = 1;
}

message UpdateLoadBalancerRequest {
  string load_balancer_id = 1 [(required) = true];
  google.protobuf.FieldMask update_mask = 2;

  string name = 3 [(pattern) = "|[a-z]([-a-z0-9]{0,61}[a-z0-9])?"];
  string description = 4 [(length) = "<=256"];
  map<string, string> labels = 5 [(size) = "<=64", (length) = "<=63", (pattern) = "[-_./\\@0-9a-z]*", (map_key).length = "1-63", (map_key).pattern = "[a-z][-_./\\@0-9a-z]*"];

  repeated ListenerSpec listener_specs = 6;
  AllocationPolicy allocation_policy = 7;
  repeated string security_group_ids = 8;
}

message UpdateLoadBalancerMetadata {
  string load_balancer_id = 1;
}

message CreateLoadBalancerRequest {
  string folder_id = 1 [(required) = true];
  string name = 2 [(pattern) = "|[a-z]([-a-z0-9]{0,61}[a-z0-9])?"];
  string description = 3 [(length) = "<=256"];
  map<string, string> labels = 4 [(yandex.cloud.size) = "<=64", (length) = "<=63", (pattern) = "[-_./\\@0-9a-z]*", (map_key).length = "1-63", (map_key).pattern = "[a-z][-_./\\@0-9a-z]*"];

  string region_id = 5 [(required) = true];
  string network_id = 6 [(required) = true];

  repeated ListenerSpec listener_specs = 7;
  AllocationPolicy allocation_policy = 8;

  repeated string security_group_ids = 9;
}

message CreateLoadBalancerMetadata {
  string load_balancer_id = 1;
}

message StartLoadBalancerRequest {
  string load_balancer_id = 1 [(required) = true];
}

message StartLoadBalancerMetadata {
  string load_balancer_id = 1;
}

message StopLoadBalancerRequest {
  string load_balancer_id = 1 [(required) = true];
}

message StopLoadBalancerMetadata {
  string load_balancer_id = 1;
}

message AddListenerRequest {
  string load_balancer_id = 1 [(required) = true];

  ListenerSpec listener_spec = 2 [(required) = true];
}

message AddListenerMetadata {
  string load_balancer_id = 1;
  string listener_name = 2;
}

message RemoveListenerRequest {
  string load_balancer_id = 1 [(required) = true];
  string name = 2 [(required) = true];
}

message RemoveListenerMetadata {
  string load_balancer_id = 1;
  string listener_name = 2;
}

message UpdateListenerRequest {
  string load_balancer_id = 1 [(required) = true];
  google.protobuf.FieldMask update_mask = 2;

  ListenerSpec listener_spec = 3 [(required) = true];
}

message UpdateListenerMetadata {
  string load_balancer_id = 1;
  string listener_name = 2;
}

message AddressSpec {
  oneof address_spec {
    option (exactly_one) = true;

    ExternalIpv4AddressSpec external_ipv4_address_spec = 1;
    InternalIpv4AddressSpec internal_ipv4_address_spec = 2;
    ExternalIpv6AddressSpec external_ipv6_address_spec = 3;
  }
}

message ExternalIpv4AddressSpec {
  string address = 1;
}

message InternalIpv4AddressSpec {
  string address = 1;
  string subnet_id = 2;
}

message ExternalIpv6AddressSpec {
  string address = 1;
}

message EndpointSpec {
  repeated AddressSpec address_specs = 1 [(size) = ">0"];
  repeated int64 ports = 2 [(size) = ">0", (value) = "1-65535"];
}

message ListenerSpec {
  string name = 1 [(required) = true, (pattern) = "[a-z]([-a-z0-9]{0,61}[a-z0-9])?"];

  repeated EndpointSpec endpoint_specs = 2 [(size) = ">0"];

  oneof listener {
    option (exactly_one) = true;
    HttpListener http = 3;
    TlsListener tls = 4;
  }
}

message GetTargetStatesRequest {
  string load_balancer_id = 1 [(required) = true];
  string backend_group_id = 2 [(required) = true];
  string target_group_id = 3 [(required) = true];
}

message GetTargetStatesResponse {
   repeated TargetState target_states = 1;
}

message AddSniMatchRequest {
  string load_balancer_id = 1 [(required) = true];
  string listener_name = 2 [(required) = true];
  string name = 3 [(required) = true];
  repeated string server_names = 4 [(size) = ">0"];
  TlsHandler handler = 5 [(required) = true];
}

message AddSniMatchMetadata {
  string load_balancer_id = 1;
  string listener_name = 2;
  string sni_match_name = 3;
}

message RemoveSniMatchRequest {
  string load_balancer_id = 1 [(required) = true];
  string listener_name = 2 [(required) = true];
  string sni_match_name = 3 [(required) = true];
}

message RemoveSniMatchMetadata {
  string load_balancer_id = 1;
  string listener_name = 2;
  string sni_match_name = 3;
}

message UpdateSniMatchRequest {
  string load_balancer_id = 1 [(required) = true];
  string listener_name = 2 [(required) = true];
  string name = 3 [(required) = true];
  google.protobuf.FieldMask update_mask = 4;
  repeated string server_names = 5 [(size) = ">0"];
  TlsHandler handler = 6 [(required) = true];
}

message UpdateSniMatchMetadata {
  string load_balancer_id = 1;
  string listener_name = 2;
  string sni_match_name = 3;
}

message ListLoadBalancerOperationsRequest {
  // ID of the load balancer to get operations for.
  //
  // To get the load balancer ID, use a [LoadBalancerService.List] request.
  string load_balancer_id = 1 [(required) = true, (length) = "<=50"];

  // The maximum number of results per page that should be returned. If the number of available
  // results is larger than [page_size], the service returns a [ListLoadBalancerOperationsResponse.next_page_token]
  // that can be used to get the next page of results in subsequent list requests.
  // Default value: 100.
  int64 page_size = 2 [(value) = "<=1000"];

  // Page token. To get the next page of results, set [page_token] to the
  // [ListLoadBalancerOperationsResponse.next_page_token] returned by a previous list request.
  string page_token = 3 [(length) = "<=100"];
}

message ListLoadBalancerOperationsResponse {
  // List of operations for the specified target group.
  repeated operation.Operation operations = 1;

  // This token allows you to get the next page of results for list requests. If the number of results
  // is larger than [ListLoadBalancerOperationsRequest.page_size], use the [next_page_token] as the value
  // for the [ListLoadBalancerOperationsRequest.page_token] query parameter in the next list request.
  // Each subsequent list request will have its own [next_page_token] to continue paging through the results.
  string next_page_token = 2;
}

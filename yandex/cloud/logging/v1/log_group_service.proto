syntax = "proto3";

package yandex.cloud.logging.v1;

import "google/api/annotations.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/field_mask.proto";
import "yandex/cloud/api/operation.proto";
import "yandex/cloud/access/access.proto";
import "yandex/cloud/logging/v1/log_group.proto";
import "yandex/cloud/logging/v1/log_resource.proto";
import "yandex/cloud/operation/operation.proto";
import "yandex/cloud/validation.proto";

option go_package = "github.com/yandex-cloud/go-genproto/yandex/cloud/logging/v1;logging";
option java_package = "yandex.cloud.api.logging.v1";

service LogGroupService {
  rpc Get (GetLogGroupRequest) returns (LogGroup) {
    option (google.api.http) = { get: "/logging/v1/logGroups/{log_group_id}" };
  }

  rpc GetDefault (GetDefaultLogGroupRequest) returns (LogGroup) {
    option (google.api.http) = { get: "/logging/v1/logGroups/default" };
  }

  rpc Stats (GetLogGroupStatsRequest) returns (GetLogGroupStatsResponse) {
    option (google.api.http) = { get: "/logging/v1/logGroups/{log_group_id}/stats" };
  }

  rpc List (ListLogGroupsRequest) returns (ListLogGroupsResponse) {
    option (google.api.http) = { get: "/logging/v1/logGroups" };
  }


  rpc Create (CreateLogGroupRequest) returns (operation.Operation) {
    option (google.api.http) = { post: "/logging/v1/logGroups" body: "*" };
    option (yandex.cloud.api.operation) = {
      metadata: "CreateLogGroupMetadata"
      response: "LogGroup"
    };
  }

  rpc Update (UpdateLogGroupRequest) returns (operation.Operation) {
    option (google.api.http) = { patch: "/logging/v1/logGroups/{log_group_id}" body: "*" };
    option (yandex.cloud.api.operation) = {
      metadata: "UpdateLogGroupMetadata"
      response: "LogGroup"
    };
  }

  rpc Delete (DeleteLogGroupRequest) returns (operation.Operation) {
    option (google.api.http) = { delete: "/logging/v1/logGroups/{log_group_id}" };
    option (yandex.cloud.api.operation) = {
      metadata: "DeleteLogGroupMetadata"
      response: "google.protobuf.Empty"
    };
  }


  rpc ListResources (ListResourcesRequest) returns (ListResourcesResponse) {
    option (google.api.http) = { get: "/logging/v1/logGroups/{log_group_id}:listResources" };
  }

  rpc ListOperations (ListOperationsRequest) returns (ListOperationsResponse) {
    option (google.api.http) = { get: "/logging/v1/logGroups/{log_group_id}/operations" };
  }

  rpc ListAccessBindings (access.ListAccessBindingsRequest) returns (access.ListAccessBindingsResponse) {
    option (google.api.http) = { get: "/logging/v1/logGroups/{resource_id}:listAccessBindings" };
  }

  rpc SetAccessBindings (access.SetAccessBindingsRequest) returns (operation.Operation) {
    option (google.api.http) = { post: "/logging/v1/logGroups/{resource_id}:setAccessBindings" body: "*" };
    option (yandex.cloud.api.operation) = {
      metadata: "access.SetAccessBindingsMetadata"
      response: "google.protobuf.Empty"
    };
  }

  rpc UpdateAccessBindings (access.UpdateAccessBindingsRequest) returns (operation.Operation) {
    option (google.api.http) = { patch: "/logging/v1/logGroups/{resource_id}:updateAccessBindings" body: "*" };
    option (yandex.cloud.api.operation) = {
      metadata: "access.UpdateAccessBindingsMetadata"
      response: "google.protobuf.Empty"
    };
  }

}

message GetLogGroupRequest {
  string log_group_id = 1 [(required) = true, (length) = "<=64"];
}

message GetLogGroupStatsRequest {
  string log_group_id = 1 [(required) = true, (length) = "<=64"];
}

message GetDefaultLogGroupRequest {
  string folder_id = 1 [(required) = true, (length) = "<=64"];
}

message ListLogGroupsRequest {
  string folder_id = 1 [(required) = true, (length) = "<=64"];
  int64 page_size = 2;
  string page_token = 3 [(length) = "<=100"];
  // supported fields for filter:
  // name
  string filter = 4 [(length) = "<=1000"];
}

message ListLogGroupsResponse {
  repeated LogGroup groups = 1;
  string next_page_token = 2;
}

message CreateLogGroupRequest {
  string folder_id = 1 [(required) = true, (length) = "<=64"];
  string name = 2 [(pattern) = "|[a-z][-a-z0-9]{1,61}[a-z0-9]"];
  string description = 3 [(length) = "<=256"];
  map<string, string> labels = 4 [(size) = "<=64", (length) = "<=63", (pattern) = "[-_0-9a-z]*", (map_key).length = "1-63", (map_key).pattern = "[a-z][-_0-9a-z]*"];
  google.protobuf.Duration retention_period = 5 [(value) = "1h-168h"];
}

message CreateLogGroupMetadata {
  string log_group_id = 1;
}

message UpdateLogGroupRequest {
  string log_group_id = 1 [(required) = true, (length) = "<=64"];
  google.protobuf.FieldMask update_mask = 2;
  string name = 3 [(pattern) = "|[a-z][-a-z0-9]{1,61}[a-z0-9]"];
  string description = 4 [(length) = "<=256"];
  map<string, string> labels = 5 [(size) = "<=64", (length) = "<=63", (pattern) = "[-_0-9a-z]*", (map_key).length = "1-63", (map_key).pattern = "[a-z][-_0-9a-z]*"];
  google.protobuf.Duration retention_period = 6 [(value) = "1h-168h"];
}

message UpdateLogGroupMetadata {
  string log_group_id = 1;
}

message DeleteLogGroupRequest {
  string log_group_id = 1 [(required) = true, (length) = "<=64"];
}

message DeleteLogGroupMetadata {
  string log_group_id = 1;
}

message ListResourcesRequest {
  string log_group_id = 1 [(required) = true, (length) = "<=64"];
  string type = 2 [(length) = "<=256"];
}

message ListResourcesResponse {
  repeated LogGroupResource resources = 1;
}

message ListOperationsRequest {
  string log_group_id = 1 [(required) = true, (length) = "<=64"];
  int64 page_size = 2 [(value) = "0-1000"];
  string page_token = 3 [(length) = "<=100"];
  // supported attributes:
  // description
  // created_at
  // modified_at
  // created_by
  // done
  string filter = 4 [(length) = "<=1000"];
}

message ListOperationsResponse {
  repeated operation.Operation operations = 1;
  string next_page_token = 2;
}

message GetLogGroupStatsResponse {
  string log_group_id = 1;
  int64 bytes = 2;
  int64 records = 3;
}
